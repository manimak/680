{"version":3,"sources":["components/globalNavBar.jsx","components/locationField.jsx","components/fieldWithAutocomplete.jsx","components/travelCheckRadio.jsx","components/foodCheckBox.jsx","components/firstPage.jsx","components/googleRoute.jsx","components/secondPage.jsx","App.js","serviceWorker.js","index.js"],"names":["GlobalNavBar","react_default","a","createElement","Navbar_default","className","href","Component","LocationField","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isEmpty","notExist","handlePlaceChanged","place","autocomplete","getPlace","address_components","setState","onPlaceChanged","handleOnChnage","document","getElementById","idValue","value","autocompleteInput","React","createRef","bind","assertThisInitialized","google","maps","places","Autocomplete","current","types","addListener","Form","Control","onChange","placeholder","id","ref","htmlFor","style","color","AutocompleteField","locationField","key","savePlaceDetails","hidden","JSON","stringify","TravelRadio","Row_default","Check","type","label","name","CheckBoxFood","UpdateMutation","gql","_templateObject","FirstPageForm","isLoading","firstField","secondField","startDate","Date","endDate","saveStartDate","saveEndDate","travelRadio","foods","handleClick","radio_value","radio","getElementsByName","i","length","checked","selectedFood","j","push","innerHTML","createTravelInfo","variables","from","to","depart","toLocaleString","timeZone","ureturn","how","window","location","assign","Promise","resolve","setTimeout","then","handleChangeStart","handleChangeEnd","date","_this2","todayDate","overflow","globalNavBar","Col_default","fieldWithAutocomplete","entry_default","minDate","travelCheckRadio","foodCheckBox","Button_default","variant","disabled","onClick","graphql","mapStyles","width","height","MapContainer","_Component","_getPrototypeOf2","_len","arguments","args","Array","_key","apply","concat","showingInfoWindow","activeMarker","selectedPlace","onMarkerClick","marker","e","onClose","inherits","createClass","dist","zoom","initialCenter","lat","lng","visible","GoogleApiWrapper","apiKey","TravelInfoQuery","secondPage_templateObject","SecondPageResult","_this$props$data","data","loading","travelInfos","googleRoute","App","BrowserRouter","Route","exact","path","render","firstPage","secondPage","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","client","ApolloClient","uri","ReactDOM","react_apollo_esm","src_App","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.fa0a3df3.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nclass GlobalNavBar extends Component {\n    \n    render() { \n        return (                \n             <Navbar className=\"navbar navbar-expand-lg navbar-dark bg-primary m4\">\n                <a className=\"navbar-brand\" href=\"/\">Team2</a>\n                \n                <ul className=\"navbar-nav mr-auto\">\n                    <li className=\"nav-item active\">\n                        <a className=\"nav-link\" href=\"/\">Home <span className=\"sr-only\">(current)</span></a>\n                    </li>\n                </ul>\n            \n            </Navbar> \n        );\n    }\n}\n \nexport default GlobalNavBar;","/* global google */\nimport React, { Component } from 'react';\nimport {Form} from 'react-bootstrap';\n\nclass LocationField extends Component {\n  state = {\n    isEmpty : false,\n    notExist : false\n  };\n  constructor(props) {\n      super(props);\n      this.autocompleteInput = React.createRef();\n      this.autocomplete = null;\n      this.handlePlaceChanged = this.handlePlaceChanged.bind(this);\n    }\n    componentDidMount() {\n      this.autocomplete = new google.maps.places.Autocomplete(\n        this.autocompleteInput.current,\n        { types: [\"geocode\"] }\n      );\n      this.autocomplete.addListener(\"place_changed\", this.handlePlaceChanged);\n    }\n  \n    handlePlaceChanged=()=> {\n      const place = this.autocomplete.getPlace();\n      if(place.address_components != null){\n        this.setState({notExist:false})\n      }\n      else{\n        this.setState({notExist:true})\n      }\n      this.props.onPlaceChanged(place.address_components);\n    }\n\n  \n\n    handleOnChnage= () =>{\n       this.setState({isEmpty: document.getElementById(this.props.idValue).value===''})\n       this.setState({notExist:false})\n       this.props.onPlaceChanged({})\n    }\n\n\n  render() { \n    \n    return (   \n      <div>   \n      <Form.Control \n        onChange={this.handleOnChnage}\n        placeholder={this.props.placeholder} \n        id={this.props.idValue} \n        ref={this.autocompleteInput} \n        className={this.state.isEmpty||this.state.notExist? \"justify-content-md-center w-75  form-control is-invalid\":\"justify-content-md-center w-75\"}\n      />  \n      <label htmlFor=\"this.props.idValue\" id={this.props.idValue} style={{color: 'red'}} >\n        {this.state.isEmpty? \"The location should not be empty.\":null}\n        {this.state.notExist? \"The location does not exist.\":null}\n      </label>\n      </div>  \n      );\n \n\n  }\n  \n}\n \nexport default LocationField;","import React, { Component } from 'react';\nimport LocationField from './locationField';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nclass AutocompleteField extends Component {\n    state = {\n        place: {},\n      };\n    \n      savePlaceDetails(place) {\n        this.setState({ place }) \n      };\n    \n    render() { \n      const id = this.props.idValue + \"place\";\n      const AddressDetails = props => {\n          return (\n              <div>\n                <p hidden>\n                <pre id={id}\n                >{JSON.stringify(props.place)} </pre>\n                </p>\n              </div>\n              \n          )\n        };\n      return ( \n        <div>\n            <LocationField \n                  key={0}\n                  idValue={this.props.idValue}\n                  placeholder={this.props.placeholder}\n                  onPlaceChanged={this.savePlaceDetails.bind(this)}\n              /> \n\n\n          \n          <AddressDetails  place={this.state.place} />\n      </div> \n      );\n    }\n}\n \nexport default AutocompleteField;","import React, { Component } from 'react';\nimport {Form} from 'react-bootstrap';\nimport Row from 'react-bootstrap/Row';\nclass TravelRadio extends Component {\n    state = {  }\n    render() { \n        return (  \n        <div className=\"ml-3\">\n        <Row>\n        <h5 className=\"mt-5 ml-5\">How will you be going there: </h5>\n        </Row>            \n        <Row>\n                \n            <Form.Check\n            className=\" pl-5 ml-5 mt-3\"\n            type=\"radio\"\n            label=\"Plane\"\n            name=\"travelRadio\"\n            id=\"Plane\"\n            />\n            <Form.Check\n            className=\" pl-5 ml-5 mt-3\"\n            type=\"radio\"\n            label=\"Car\"\n            name=\"travelRadio\"\n            id=\"Car\"\n            />\n            <Form.Check\n            className=\" pl-5 ml-5 mt-3\"\n            type=\"radio\"\n            label=\"Transit\"\n            name=\"travelRadio\"\n            id=\"Transit\"\n            />\n           <Form.Check\n            className=\" pl-5 ml-5 mt-3\"\n            type=\"radio\"\n            label=\"Other\"\n            name=\"travelRadio\"\n            id=\"Other\"\n            />\n            \n        </Row> \n        </div>\n        );\n    }\n}\n \nexport default TravelRadio;","import React, { Component } from 'react';\nimport {Form} from 'react-bootstrap';\nimport Row from 'react-bootstrap/Row';\n\n\nclass CheckBoxFood extends Component {\n    state = {  }\n    render() { \n        return ( \n            <div className=\"ml-3\">\n            <Row>\n                <h5 className=\"mt-5 ml-5\">What kind of food or/and drink do you like: </h5>\n            </Row> \n            <Row>\n                <Form.Check\n                className=\" pl-5 ml-5 mt-4\"\n                type=\"checkbox\"\n                label=\"Mexican\"\n                name=\"foodCheckBox\"\n                id=\"Mexican\"\n                />\n                <Form.Check\n                className=\" pl-5 ml-5 mt-4\"\n                type=\"checkbox\"\n                label=\"American\"\n                name=\"foodCheckBox\"\n                id=\"American\"\n                />\n                <Form.Check\n                className=\" pl-5 ml-5 mt-4\"\n                type=\"checkbox\"\n                label=\"Japanese\"\n                name=\"foodCheckBox\"\n                id=\"Japanese\"\n                />\n                <Form.Check\n                className=\" pl-5 ml-5 mt-4\"\n                type=\"checkbox\"\n                label=\"Italian\"\n                name=\"foodCheckBox\"\n                id=\"Italian\"\n                />\n                <Form.Check\n                className=\" pl-5 ml-5 mt-4\"\n                type=\"checkbox\"\n                label=\"Chinese\"\n                name=\"foodCheckBox\"\n                id=\"Chinese\"\n                />\n                <Form.Check\n                className=\" pl-5 ml-5 mt-4\"\n                type=\"checkbox\"\n                label=\"Mediterranean\"\n                name=\"foodCheckBox\"\n                id=\"Mediterranean\"\n                />\n                \n            </Row>\n            <Row>\n            <Form.Check\n                className=\" pl-5 ml-5 mt-4\"\n                type=\"checkbox\"\n                label=\"Sandwiches\"\n                name=\"foodCheckBox\"\n                id=\"Sandwiches\"\n                />\n                <Form.Check\n                className=\" pl-4 ml-5 mt-4\"\n                type=\"checkbox\"\n                label=\"Fast Food\"\n                name=\"foodCheckBox\"\n                id=\"Fast Food\"\n                />\n                <Form.Check\n                className=\" pl-5 ml-5 mt-4\"\n                type=\"checkbox\"\n                label=\"Buffets\"\n                name=\"foodCheckBox\"\n                id=\"Buffets\"\n                />\n                <Form.Check\n                className=\" pl-5 ml-5 mt-4\"\n                type=\"checkbox\"\n                label=\"Cafes\"\n                name=\"foodCheckBox\"\n                id=\"Cafes\"\n                />\n                <Form.Check\n                className=\" pl-5 ml-5 mt-4\"\n                type=\"checkbox\"\n                label=\"Vegan\"\n                name=\"foodCheckBox\"\n                id=\"Vegan\"\n                />\n                <Form.Check\n                className=\" pl-5 ml-5 mt-4\"\n                type=\"checkbox\"\n                label=\"Breakfast & Brunch\"\n                name=\"foodCheckBox\"\n                id=\"Breakfast & Brunch\"\n                />\n            </Row>\n            <Row>\n            <Form.Check\n                className=\" pl-5 ml-5 mt-4\"\n                type=\"checkbox\"\n                label=\"Street Vendors\"\n                name=\"foodCheckBox\"\n                id=\"Street Vendors\"\n                />\n                <Form.Check\n                className=\" pl-4 ml-5 mt-4\"\n                type=\"checkbox\"\n                label=\"Bars\"\n                name=\"foodCheckBox\"\n                id=\"Bars\"\n                />\n                <Form.Check\n                className=\" pl-5 ml-5 mt-4\"\n                type=\"checkbox\"\n                label=\"Pizza\"\n                name=\"foodCheckBox\"\n                id=\"Pizza\"\n                />\n                <Form.Check\n                className=\" pl-5 ml-5 mt-4\"\n                type=\"checkbox\"\n                label=\"Desserts\"\n                name=\"foodCheckBox\"\n                id=\"Desserts\"\n                />\n                <Form.Check\n                className=\" pl-5 ml-5 mt-4\"\n                type=\"checkbox\"\n                label=\"Kosher\"\n                name=\"foodCheckBox\"\n                id=\"Kosher\"\n                />\n                <Form.Check\n                className=\" pl-5 ml-5 mt-4\"\n                type=\"checkbox\"\n                label=\"Ice Cream & Frozen Yogurt\"\n                name=\"foodCheckBox\"\n                id=\"Ice Cream & Frozen Yogurt\"\n                />\n            </Row>\n\n\n            </div>\n         );\n    }\n}\n \nexport default CheckBoxFood;","import React, { Component } from 'react';\nimport {Form} from 'react-bootstrap';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport GlobalNavBar from './globalNavBar';\nimport AutocompleteField from './fieldWithAutocomplete';\nimport DatePicker from 'react-date-picker';\nimport TravelRadio from './travelCheckRadio';\nimport CheckBoxFood from './foodCheckBox';\nimport gql from 'graphql-tag';\nimport {graphql , compose} from 'react-apollo';\n// import DatePicker from \"react-datepicker\";\nimport 'bootstrap/dist/css/bootstrap.css';\n// import \"react-datepicker/dist/react-datepicker.css\";\n\nconst UpdateMutation = gql`\n    mutation($from: String!,$to: String!,$depart: String!,$ureturn: String!,$how: String!,$foods: [String])\n    {\n        createTravelInfo(from: $from,to: $to,depart: $depart,ureturn: $ureturn,how: $how,foods: $foods){\n            from,\n            to,\n            depart,\n            ureturn,\n            how,\n            foods\n        }\n    }\n`;\n\nfunction simulateNetworkRequest() {\n    return new Promise(resolve => setTimeout(resolve, 500));\n  }\n\nclass FirstPageForm extends Component {\n    state = { \n        isLoading: false,\n        firstField : \"\",\n        secondField : \"\",\n        notExist : false,\n        startDate: new Date(),\n        endDate: new Date(),\n        saveStartDate : \"\",\n        saveEndDate : \"\",\n        travelRadio : \"\",\n        foods : [],\n     };\n     \n    constructor(){\n        super();\n        this.handleClick = this.handleClick.bind(this);\n        this.handleChangeStart = this.handleChangeStart.bind(this);\n        this.handleChangeEnd = this.handleChangeEnd.bind(this);\n    };\n\n    handleChangeStart(date){\n        this.setState({\n          startDate: date\n        },()=>{\n            if(this.state.startDate > this.state.endDate){\n                this.setState({\n                    endDate : this.state.startDate\n                })\n            }\n        });\n\n      }\n\n\n  handleChangeEnd(date) {\n    this.setState({\n      endDate: date\n    });\n    }\n    \n\n    handleClick= ()=> {\n\n        \n            var radio = document.getElementsByName('travelRadio');\n            var radio_value;\n            for(var i = 0; i < radio.length; i++){\n                if(radio[i].checked){\n                    radio_value = radio[i].id;\n                }\n            }\n            var foods = document.getElementsByName('foodCheckBox');\n            var selectedFood  = [];\n            for(var j=0;j<foods.length;j++){\n                if(foods[j].checked){\n                    selectedFood.push(foods[j].id)\n                }\n            }\n            if(\n            document.getElementById(\"location1\").className !== \"justify-content-md-center w-75  form-control is-invalid form-control\"\n            && document.getElementById(\"location2\").className !== \"justify-content-md-center w-75  form-control is-invalid form-control\"\n            && document.getElementById(\"location1place\").innerHTML!== \"{} \"\n            && document.getElementById(\"location2place\").innerHTML!==\"{} \"\n            && this.state.startDate !== null\n            && this.state.endDate !== null \n            && typeof radio_value !== \"undefined\" )\n            \n            {\n                this.setState({firstField: this.state.firstField = document.getElementById(\"location1\").value});\n                this.setState({secondField: this.state.secondField = document.getElementById(\"location2\").value});\n                this.setState({notExist : false})\n                this.setState({saveStartDate : this.state.startDate})\n                this.setState({saveEndDate : this.state.endDate})\n                this.setState({travelRadio: radio_value})\n                this.setState({foods : selectedFood})\n                \n                 this.props.createTravelInfo({\n                   variables:{\n                        from: document.getElementById(\"location1\").value,\n                        to: document.getElementById(\"location2\").value,\n                        depart: this.state.startDate.toLocaleString('us-GB', { timeZone: 'UTC' }),\n                        ureturn: this.state.endDate.toLocaleString('us-GB', { timeZone: 'UTC' }),\n                        how: radio_value,\n                        foods: selectedFood\n\n                    }\n                })\n                window.location.assign('/result')\n            }\n            else{\n                this.setState({notExist : true})\n            }\n\n            this.setState({ isLoading: true }, () => {\n                simulateNetworkRequest().then(() => {\n                    this.setState({ isLoading: false });\n                });\n            });\n            \n      };\n\n\n\n    render() { \n        const todayDate = new Date();\n\n        return ( \n            <div style={{overflow: 'auto'}} >\n                <GlobalNavBar/>\n                <h2 className=\"my-4\" >Welcome to the Travel Planner</h2>\n                <Form>\n                    <Row>\n                        <Col><AutocompleteField \n                            key={0}\n                            idValue={\"location1\"}\n                            placeholder={\"Where from?\"}\n                            /> \n                        </Col>\n                        <Col><AutocompleteField \n                            key={1} \n                            idValue={\"location2\"}\n                            placeholder={\"Where to?\"}\n                            /> \n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                            <center>\n                                <label htmlFor=\"startDate\" className={\"pt-4\"}>Depart:</label>\n                            </center>\n                            <DatePicker \n                                minDate={todayDate }\n                                id={\"startDate\"}\n                                className={\"justify-content-md-center w-75\"}\n                                value={this.state.startDate}\n                                onChange={this.handleChangeStart}\n                            />\n                        </Col>\n                        <Col>\n                            <center>\n                                <label htmlFor=\"endDate\" className={\"pt-4\"} >Return:</label>\n                            </center>\n                            <DatePicker\n                                minDate={this.state.startDate > todayDate ? this.state.startDate:todayDate}\n                                id={\"endDate\"}\n                                className={\"justify-content-md-center w-75\"}\n                                value={this.state.endDate}\n                                onChange={this.handleChangeEnd}\n                            />\n                        </Col>\n                    </Row>\n  \n                    <Row>\n                        <TravelRadio></TravelRadio>\n                    </Row>\n                    <Row>\n                        <CheckBoxFood></CheckBoxFood>\n                    </Row>\n                    \n                        <Button \n                        id={\"submitButton\"}\n                        variant=\"outline-primary\" \n                        className=\"btn btn-secondary  mt-5\"\n                        disabled={this.state.isLoading}\n                        onClick={!this.state.isLoading ? this.handleClick : null } \n                    >\n                        {this.state.isLoading ? 'Loading…' : 'Submit'}\n                    </Button>\n             \n                </Form>\n                <label htmlFor=\"submitButton\" style={{color: 'red'}} >\n                        {this.state.notExist? \"Please complete the form.\":null}\n                </label>\n                \n                <div id={\"firstField\"}>{this.state.notExist? null:this.state.firstField}</div>\n                <div id={\"secondField\"}>{this.state.notExist? null:this.state.secondField}</div>\n                <div id={\"startDate\"}>{this.state.notExist? null:this.state.saveStartDate.toLocaleString('us-GB', { timeZone: 'UTC' })}</div>\n                <div id={\"endDate\"}>{this.state.notExist? null:this.state.saveEndDate.toLocaleString('us-GB', { timeZone: 'UTC' })}</div>\n                <div id={\"travelRadioResult\"}>{this.state.notExist? null:this.state.travelRadio}</div>\n                <div id={\"foodsResult\"}>{this.state.notExist? null:this.state.foods}</div>\n                \n            </div>\n            );\n    }\n}\n \nexport default graphql(UpdateMutation, {name: \"createTravelInfo\"}) (FirstPageForm);\n\n\n\n\n// npm install react-date-picker","/* global google */\nimport React, { Component } from 'react';\nimport {Map, GoogleApiWrapper, InfoWindow, Marker } from 'google-maps-react'; \n\n// the sise of the map which will show on the website \nconst mapStyles = {\n  width: '50%',\n  height: '100%'\n};\n// main class \nexport class MapContainer extends Component {\n  state = {\n   showingInfoWindow: false,  //Hides or the shows the infoWindow\n   activeMarker: {},          //Shows the active marker upon click\n   selectedPlace: {}          //Shows the infoWindow to the selected place upon a marker\n };\n onMarkerClick = (props, marker, e) =>\n this.setState({\n   selectedPlace: props,\n   activeMarker: marker,\n   showingInfoWindow: true\n });\n\nonClose = props => {\n if (this.state.showingInfoWindow) {\n   this.setState({\n     showingInfoWindow: false,\n     activeMarker: null\n   });\n }\n};\n  render() {\n    return (\n      //the information for the map function and what location we intiallay show on the map \n      \n      <Map\n        google={this.props.google}\n        zoom={12}\n        style={mapStyles}\n        initialCenter={{ lat: 34.244572, lng: -118.528839 }}>\n         <Marker\n          onClick={this.onMarkerClick}\n          name={'California State University, Northridge'}\n        />\n      \n        <InfoWindow \n          marker={this.state.activeMarker}\n          visible={this.state.showingInfoWindow}\n          onClose={this.onClose}\n        >\n          <div>\n            <h4>{this.state.selectedPlace.name}</h4>\n          </div>\n        </InfoWindow>\n        </Map>\n        \n    );\n  }\n}\n\nexport default GoogleApiWrapper({\n  // The Google API KEY \n  apiKey: 'AIzaSyAcQjrfAudzl6Ton7GA7D-gVqOINMFE7ns'\n})(MapContainer);","import React, { Component } from 'react';\nimport GlobalNavBar from './globalNavBar';\nimport gql from 'graphql-tag';\nimport {graphql} from 'react-apollo';\nimport MapContainer from './googleRoute';\n\n\n\nconst TravelInfoQuery = gql`\n{\n  travelInfos {\n    id\n    from\n    to\n    depart\n    ureturn\n    how\n    foods\n  }\n}\n`;\nclass SecondPageResult extends Component {\n    state = {  }\n    render() { \n        const {data: {loading,travelInfos}} = this.props;\n        if (loading){\n          return null;\n        }\n        return ( \n        <div>\n            <GlobalNavBar/> \n            <center>\n            \n                {/* <div style={{margin:'auto',width: 400}}>\n                    {travelInfos[travelInfos.length-1].from}\n                    ,\n                    {travelInfos[travelInfos.length-1].to}\n                    ,\n                    {travelInfos[travelInfos.length-1].depart}\n                    ,\n                    {travelInfos[travelInfos.length-1].ureturn}\n                    ,\n                    {travelInfos[travelInfos.length-1].how}\n                    ,\n                    {travelInfos[travelInfos.length-1].foods}\n                     \n                </div> */}\n                <pre>{JSON.stringify(travelInfos[travelInfos.length-1],null, 2)} </pre>\n                <MapContainer/>\n            </center>\n        </div>\n        );\n    }\n}\n \nexport default graphql(TravelInfoQuery) (SecondPageResult);","import React, { Component } from 'react';\nimport FirstPageForm from './components/firstPage';\nimport  SecondPageResult from './components/secondPage';\nimport {BrowserRouter, Route} from 'react-router-dom';\nimport gql from 'graphql-tag';\nimport {graphql , compose} from 'react-apollo';\n\n// const UsersQuery = gql`\n// {\n//   users {\n//     id\n//     firstName\n// \t\tlastName\n//   }\n// }\n// `;\n// const TravelInfoQuery = gql`\n// {\n//   travelInfos {\n//     id\n//     from\n//     to\n//     depart\n//     ureturn\n//     how\n//     foods\n//   }\n// }\n// `;\n\n\n\nclass App extends Component {\n  render() {\n    // const {data: {loading,users}} = this.props;\n    // if (loading){\n    //   return null;\n    // }\n    return (\n      \n\n      <BrowserRouter>\n        <div>\n          <Route exact={true} path='/' render={() => (\n            <center>    \n              <FirstPageForm/>\n              {/* <div style={{display: 'flex'}}>\n\n              <div style={{margin:'auto',width: 400}}>\n                  {users.map(user =>\n                    <div key={`${user.id}-todo-item`}>{user.firstName}  {user.lastName}</div>\n                  )}  \n              </div>\n              </div> */}\n            </center>\n            )}/>\n          <Route exact={true} path='/result' render={() => (\n            <center>   \n            <SecondPageResult/>\n            </center>\n          )}/>\n        </div>  \n        </BrowserRouter>  \n    );\n  }\n}\n\n// export default graphql(TravelInfoQuery)(App);\n\nexport default App;\n\n\n\n// npm install --save react-router-dom","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from 'react-apollo';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport \"./index.css\";\n\nconst client = new ApolloClient({\n  uri: \"http://localhost:4000/\"\n});\n\nReactDOM.render(\n    <ApolloProvider client={client}>\n    <App/>\n    </ApolloProvider>, \n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n "],"sourceRoot":""}